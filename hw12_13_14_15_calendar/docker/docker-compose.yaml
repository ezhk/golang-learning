version: "3.5"

networks:
  server:
    driver: bridge
  rabbit:
    driver: bridge
  postgres:
    driver: bridge

services:
  postgres-golang-learning:
    image: postgres:alpine
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - postgres

  rabbitmq-golang-learning:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    expose:
      - 5672
      - 15672
    networks:
      - rabbit

  calendar-base-image:
    image: calendar-base-image
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: "true"

  server:
    image: calendar-base-image
    container_name: calendar-server
    ports:
      - "8080:8080"
      - "9090:9090"
    expose:
      - 8080
      - 9090
    depends_on:
      - calendar-base-image
      - postgres-golang-learning
    networks:
      - server
      - postgres
    command: >
      /bin/sh -c '
        while ! nc -z postgres-golang-learning 5432;
        do
          echo "waiting for postgres-golang-learning";
          sleep 1;
        done;

        /app/goose -dir migrations postgres "user=postgres password=postgres dbname=postgres host=postgres-golang-learning port=5432 sslmode=disable" up;
        /app/calendar server;
      '

  sender:
    image: calendar-base-image
    container_name: calendar-sender
    depends_on:
      - calendar-base-image
      - rabbitmq-golang-learning
    networks:
      - rabbit
    command: >
      /bin/sh -c '
        while ! nc -z rabbitmq-golang-learning 5672;
        do
          echo "waiting for rabbitmq-golang-learning";
          sleep 1;
        done;

        /app/calendar sender;
      '

  scheduler:
    image: calendar-base-image
    container_name: calendar-scheduler
    depends_on:
      - postgres-golang-learning
      - rabbitmq-golang-learning
      - sender
    networks:
      - postgres
      - rabbit
    command: >
      /bin/sh -c '
        while ! nc -z postgres-golang-learning 5432;
        do
          echo "waiting for postgres-golang-learning";
          sleep 1;
        done;

        while ! nc -z rabbitmq-golang-learning 5672;
        do
          echo "waiting for rabbitmq-golang-learning";
          sleep 1;
        done;

        /app/goose -dir migrations postgres "user=postgres password=postgres dbname=postgres host=postgres-golang-learning port=5432 sslmode=disable" up;
        /app/calendar scheduler;
      '

  bdd-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile-bdd-tests
    image: calendar-bdd-tests
    environment:
      - REST_SERVER=http://server:8080
    volumes:
      - ../godogs:/app/godogs
    working_dir: /app/godogs
    depends_on:
      - server
      - scheduler
      - sender
    networks:
      - server
    command: godog -f progress
