// generated by generate-table-tests; DO NOT EDIT
// +build integration

package storage

import (
	"testing"

	"github.com/ezhk/golang-learning/banners-rotation/internal/config"
	"github.com/stretchr/testify/suite"
)

type BannerTestSuite struct {
	suite.Suite
	db *Storage
}

func TestBannerSuite(t *testing.T) {
	suite.Run(t, new(BannerTestSuite))
}

func (s *BannerTestSuite) SetupTest() {
	cfg := config.NewConfig("testdata/config.yaml")

	db, err := NewStorage(cfg)
	s.NoError(err)

	// Define storage.
	s.db = db
}

func (s *BannerTestSuite) TestBannerOperations() {
	// Create new banner.
	banner, err := s.db.CreateBanner("test banner", "test description")
	s.NoError(err)
	defer s.db.DeleteBanner(banner.ID)

	s.Equal("test banner", banner.Name)

	banner.Name = "updated test banner"
	updatedBanner, err := s.db.UpdateBanner(banner)
	s.NoError(err)
	s.Equal("updated test banner", updatedBanner.Name)

	banners, err := s.db.ReadBanners()
	s.NoError(err)
	s.Greater(len(banners), 0)
	for _, obj := range banners {
		if obj.ID != banner.ID {
			continue
		}

		s.Equal("updated test banner", obj.Name)
	}

	// Call "duplicate key value violates unique constraint".
	_, err = s.db.CreateBanner("updated test banner", "empty")
	s.Error(err)

	err = s.db.DeleteBanner(banner.ID)
	s.NoError(err)
}
